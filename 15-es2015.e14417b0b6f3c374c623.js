(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"EM1+":function(n,e,t){"use strict";t.r(e),t.d(e,"RepositoryModule",function(){return _});var a=t("mrSG"),s=t("fXoL"),i=t("ofXK"),r=t("tyNb"),o=t("c0TW"),c=t("3Pt+"),l=t("y8eJ"),d=t("ZfaG");const p=[c.n.pattern(/(?:git|ssh|https?|git@[-\w.]+):(\/\/)?(.*?)(\.git)(\/?|\#[-\d\w._]+?)$/),c.n.required,c.n.minLength(1)];let m=class{constructor(n){this.assetApiService=n,this.saving=!1,this.saving_ip_index=-1,this.auth$=new c.e({username:new c.d("",[c.n.required]),password:new c.d("",[c.n.required])}),this.access_token$=new c.e({access_token:new c.d("",[c.n.required])}),this.ssh$=new c.e({ssh:new c.d("",[c.n.required])}),this.ip_addresses=new c.b([new c.d("",p)]),this.tmp$=1,this.myForm=new c.e({name:new c.d("",[c.n.required]),url:new c.d("",p),credential_type:new c.d("none"),credentials:new c.e({})})}addNewIp(){this.ip_addresses.push(new c.d(""))}ngOnInit(){this.myForm.get("credential_type").valueChanges.subscribe(n=>{switch(console.log("d",n),n){case"none":this.myForm.setControl("credentials",null);break;case"password":this.myForm.setControl("credentials",this.auth$);break;case"access_token":this.myForm.setControl("credentials",this.access_token$);break;case"ssh":this.myForm.setControl("credentials",this.ssh$)}})}removeAt(n){this.ip_addresses.removeAt(n)}save(){this.saving=!0,this.assetApiService.addRepository(this.myForm.value).subscribe()}};m.ctorParameters=()=>[{type:l.a}],m=Object(a.a)([Object(s.n)({selector:"app-repository-add",template:'<form [formGroup]="myForm" novalidate >\n\n  <nb-card @init>\n\n    <nb-card-header>\n\n      <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n        <nb-icon class="text-hint" icon="plus-circle">\n        </nb-icon>\n        <div fxFlex class="h6 text-hint">\n          Add Repository\n\n        </div>\n\n      </div>\n\n    </nb-card-header>\n\n    <nb-card-body @init>\n      <nb-form-field [nbSpinner]="saving" >\n \n        <input formControlName="name" fullWidth fxFlex="50%"  nbInput fieldSize="large"   [status]="name?.valid ? \'primary\' : \'basic\' "\n            placeholder="Name">\n\n  \n\n      </nb-form-field>\n\n    </nb-card-body>\n\n    <nb-card-body @init>\n      <nb-form-field [nbSpinner]="saving">\n        <div nbPrefix icon="at-outline" pack="eva">\n          Url\n\n        </div>\n        <input formControlName="url" nbInput fieldSize="medium" fxFlex [status]="url?.valid ? \'primary\' : \'basic\' "\n          fullWidth placeholder="Repository Url">\n\n        <button nbButton nbSuffix size="small" filled status="primary">\n          <nb-icon icon="close-outline">\n          </nb-icon>\n        </button>\n\n      </nb-form-field>\n\n    </nb-card-body>\n \n    <nb-card-body @init   >\n  <div  >\n\n\n      <div     fxLayout="row" class="credentials h6 text-hint  ">\n        Credentials\n      </div>\n\n      <div    class="credentials"   fxLayout="row">\n\n        <nb-radio-group formControlName="credential_type" fxLayout="row" name="status" status="basic">\n          <nb-radio [checked]="true" value="none">\n            None\n          </nb-radio>\n\n          <nb-radio value="password">\n            Password\n          </nb-radio>\n\n          <nb-radio value="access_token">\n            Access token\n          </nb-radio>\n\n          <nb-radio value="ssh">\n            SSH\n          </nb-radio>\n        </nb-radio-group>\n\n      </div>\n\n\n    <div   class="credentials  "  formGroupName="credentials"\n\n     @init fxLayout="column" fxLayoutGap="1rem">\n\n\n      <ng-container  \n      \n      [ngSwitch]="myForm.get(\'credential_type\').value">\n\n\n        <ng-container *ngSwitchCase="\'none\'">\n\n        </ng-container>\n\n\n        <ng-container *ngSwitchCase="\'password\'">\n          <nb-form-field>\n\n            <input\n            formControlName="username"\n            nbInput fieldSize="medium" status="primary" placeholder="Username">\n\n            <button nbButton nbSuffix size="small" filled status="primary">\n              <nb-icon icon="close-outline">\n              </nb-icon>\n            </button>\n\n          </nb-form-field>\n\n\n          <nb-form-field>\n\n            <input\n            formControlName="password"\n            nbInput fieldSize="medium" status="primary" placeholder="Password">\n\n            <button nbButton nbSuffix size="small" filled status="primary">\n              <nb-icon icon="close-outline">\n              </nb-icon>\n            </button>\n\n          </nb-form-field>\n        </ng-container>\n\n\n\n\n        <ng-container *ngSwitchCase="\'access_token\'">\n\n\n\n          <textarea\n          formControlName="access_token"\n          \n          rows="7" status="primary" nbInput fullWidth placeholder="Access Token"></textarea>\n\n\n        </ng-container>\n\n\n        <ng-container *ngSwitchCase="\'ssh\'">\n          <textarea\n          formControlName="ssh"\n          \n          rows="7" status="primary" nbInput fullWidth placeholder="SSH Key"></textarea>\n        </ng-container>\n      </ng-container>\n\n\n    </div>\n\n\n\n\n\n\n    </div>\n\n\n\n\n    </nb-card-body>\n\n\n\n\n\n\n\n\n\n    <nb-card-footer fxLayoutAlign="end center">\n\n\n\n\n      <button [disabled]="!myForm?.valid" (click)="save()" outline nbButton [status]="myForm?.valid ? \'success\': \'basic\'">\n\n        <nb-icon icon="checkmark-circle-2">\n        </nb-icon>\n        Save\n\n      </button>\n    </nb-card-footer>\n\n\n  </nb-card>\n</form>\n',animations:[...d.a],styles:["textarea {\n  font-weight: 450 !important;\n  color: #838080;\n  resize: none;\n}\n\n.nogap {\n  padding: 0rem !important;\n}\n\n.credentials {\n  margin: 1rem;\n}"]})],m);let u=class{constructor(){}ngOnInit(){}};u.ctorParameters=()=>[],u=Object(a.a)([Object(s.n)({selector:"app-repository-home",template:"<app-repository-search></app-repository-search>\n<app-repository-list></app-repository-list>\n<app-repository-add></app-repository-add>\n\x3c!-- dsad --\x3e",styles:[""]})],u);const b=[{path:"",children:[{path:"add",component:m,data:{id:o.b.IosCreate}},{path:"**",component:u,data:{id:o.b.IosConfigure}}]}];let h=class{};h=Object(a.a)([Object(s.M)({imports:[r.j.forChild(b)],exports:[r.j]})],h);let f=class{constructor(n,e,t){this.el=n,this.document=e,this.assetApiService=t,this.selected_host_list_item=-1,this.assets=[]}ngOnInit(){this.assetApiService.getRepository().subscribe(n=>{this.assets=n})}};f.ctorParameters=()=>[{type:s.v},{type:Document,decorators:[{type:s.D,args:[i.d]}]},{type:l.a}],f.propDecorators={template:[{type:s.pb,args:["template",{static:!1}]}]},f=Object(a.a)([Object(s.n)({selector:"app-repository-list",template:'<div fxFlex class="container">\n\n \n    <div class="scsroll" fxLayout="column">\n  \n      <ng-container *ngFor="let web_app of web_apps ; index as index">\n  \n        <div fxLayout="column" (click)="detailedView(index)">\n  \n          <div       [class.selected]="selected_web_app_list_item == index " fxLayout="row" fxFlex>\n  \n            <div appHoverColor appBorder fxFlex fxLayoutAlign="center center" fxLayoutGap="1rem" class="list-item">\n  \n              <ng-container *ngIf="web_app?.health == \'up\' ; else healthDown">\n  \n                <nb-icon class="health-up " icon="arrow-up">\n  \n                </nb-icon>\n              </ng-container>\n              <ng-template #healthDown>\n                <nb-icon class="health-down " icon="arrow-down">\n  \n                </nb-icon>\n              </ng-template>\n  \n              <div appHoverColor fxFlex fxLayoutAlign="start center" class="list-item">\n  \n  \n                <span class="marL list-item-head">\n                  {{web_app.url}}\n  \n                </span>\n              </div>\n  \n            </div>\n            <div appHoverColor appBorder fxFlex="150px" fxLayoutAlign="center center" class="list-item">\n              {{web_app.group || \'None\'}}\n  \n            </div>\n  \n  \n  \n            <div appHoverColor appBorder fxFlex="180px" fxLayoutAlign="center center" class="list-item">\n              {{web_app.dou | date}}\n            </div>\n          </div>\n  \n        </div>\n      </ng-container>\n  \n    </div>\n  \n  </div>\n  \n  \n  \n  <ng-template #template>\n  \n    <app-web_app-add></app-web_app-add>\n  \n  \n  </ng-template>\n  ',styles:[""]})],f);let y=class{constructor(){}ngOnInit(){}};y.ctorParameters=()=>[],y=Object(a.a)([Object(s.n)({selector:"app-repository-search",template:"<p>repository-search works!</p>\n",styles:[""]})],y);var v=t("rDax"),w=t("XiUz"),g=t("aceb"),x=t("IwCi");let _=class{};_=Object(a.a)([Object(s.M)({declarations:[u,f,y,m],imports:[i.c,h,x.a,w.a,g.n,g.k,g.m,v.f,g.o,g.C,c.f,c.m,g.x,g.k,g.v,g.u]})],_)}}]);