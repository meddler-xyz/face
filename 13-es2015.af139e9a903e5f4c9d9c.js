(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{yKjN:function(n,e,t){"use strict";t.r(e),t.d(e,"HostModule",function(){return _});var a=t("mrSG"),s=t("fXoL"),i=t("ofXK"),o=t("tyNb"),r=t("c0TW"),d=t("3Pt+"),l=t("y8eJ"),c=t("ZfaG");const p=[d.n.pattern("(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"),d.n.required];let h=class{constructor(n){this.assetApiService=n,this.saving=!1,this.saving_ip_index=-1,this.ip_addresses=new d.b([new d.d("",p)]),this.tmp$=1}addNewIp(){this.ip_addresses.push(new d.d("",p))}ngOnInit(){}removeAt(n){this.ip_addresses.removeAt(n)}saveIp(){this.saving=!0,this.ip_addresses.controls.forEach((n,e)=>{n.valid&&this.assetApiService.addHost(n.value).subscribe(n=>{this.ip_addresses.removeAt(e)})}),this.saving=!1}};h.ctorParameters=()=>[{type:l.a}],h=Object(a.a)([Object(s.n)({selector:"app-host-add",template:'<nb-card size="medium">\n\n\n\n  <nb-card-header>\n\n    <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n      <nb-icon class="text-hint" icon="plus-circle">\n      </nb-icon>\n      <div fxFlex class="h6 text-hint">\n        Add Host\n\n      </div>\n\n\n      <button status="warning" (click)="addNewIp()" nbButton outline size="small">\n        Add New\n\n        <nb-icon icon="plus-circle">\n        </nb-icon>\n\n      </button>\n\n\n\n\n\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n\n\n\n    <div class="item"   @init *ngFor="let ip_address_import of ip_addresses.controls; index as index ">\n\n\n      <nb-form-field [nbSpinner]="saving">\n        <div nbPrefix icon="at-outline" pack="eva">\n          #{{index+1}}\n        </div>\n        <input fullWidth [formControl]="ip_addresses.controls[index]" nbInput fieldSize="medium"\n          [status]="ip_addresses.controls[index].valid ? \'basic\' : \'danger\' " placeholder="IP Address">\n\n\n        <button [ngStyle]="{ \'visibility\': index == 0 ? \'hidden\' : \'visible\'  }" nbSuffix (click)="removeAt(index)"\n          nbButton size="small" ghost status="basic">\n          <nb-icon icon="trash-outline">\n          </nb-icon>\n        </button>\n\n\n      </nb-form-field>\n\n\n\n      <ng-container>\n        <div [ngStyle]="{ \'visibility\': ip_addresses.controls[index].valid ? \'hidden\' : \'visible\'  }"\n          class="error-message">\n          <span class="caption">\n            *Invalid IP Address\n          </span>\n        </div>\n\n      </ng-container>\n\n    </div>\n\n\n\n\n\n  </nb-card-body>\n\n  <nb-card-footer fxLayoutAlign="end center">\n\n\n\n    <button [disabled]="!ip_addresses.valid" (click)="saveIp()" outline nbButton\n      [status]="ip_addresses.valid ? \'success\': \'basic\'">\n\n      <nb-icon icon="checkmark-circle-2">\n      </nb-icon>\n      Save\n\n\n    </button>\n  </nb-card-footer>\n\n</nb-card>\n',animations:[...c.a],styles:[".marL {\n  margin-left: 10px;\n}\n\n.item {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.error-message {\n  margin-top: 0.6rem;\n  margin-bottom: 0.6rem;\n}"]})],h);let m=class{constructor(){}ngOnInit(){}};m.ctorParameters=()=>[],m=Object(a.a)([Object(s.n)({selector:"app-host-management",template:' <nb-card fxFill>\n\n\n   <nb-card-header>\n\n     <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n       <nb-icon class="text-hint" icon="plus-circle">\n       </nb-icon>\n       <div fxFlex class="h6 text-hint">\n         List of Hosts\n\n       </div>\n     </div>\n\n   </nb-card-header>\n\n   <nb-card-header>\n     <app-host-search></app-host-search>\n\n   </nb-card-header>\n\n   <nb-card-header class="nogap">\n\n     <div fxLayout="column">\n\n       <div fxLayout="row" fxFlex class="list-head">\n\n\n\n\n         <div appHoverColor appBorder fxFlex fxLayoutAlign="start center" class="list-item-head">\n           <span class="marL" style=" padding-left:\'2rem\'">\n             Host\n\n           </span>\n         </div>\n\n\n         <div appHoverColor appBorder fxFlex="150px" fxLayoutAlign="center center" class="list-item-head">\n           Group\n         </div>\n\n\n         <div appHoverColor appBorder fxFlex="180px" fxLayoutAlign="center center" class="list-item-head">\n           Last Checked\n         </div>\n\n\n       </div>\n\n     </div>\n\n   </nb-card-header>\n\n\n\n   <nb-card-body class="nogap">\n     <app-host-list></app-host-list>\n   </nb-card-body>\n\n </nb-card>\n',styles:[":host nb-tab {\n  padding: 0rem;\n}\n\n.stycky {\n  position: -webkit-sticky;\n  /* Safari */\n  position: sticky;\n}\n\n.list-item-head {\n  font-weight: 600 !important;\n  font-size: 0.9rem;\n  color: #a4b1cd !important;\n  overflow: auto;\n}\n\n.list-head {\n  height: 4rem;\n}\n\n.nogap {\n  padding: 0rem !important;\n}\n\nnb-list {\n  height: 0px !important;\n  overflow: scroll;\n}"]})],m);const b=[{path:"add",component:h,data:{id:r.b.HostCreate}},{path:"**",component:m,data:{id:r.b.HostConfigure}}];let u=class{};u=Object(a.a)([Object(s.M)({imports:[o.j.forChild(b)],exports:[o.j]})],u);var f=t("IwCi");let v=class{constructor(n,e,t){this.el=n,this.document=e,this.aseetService=t,this.selected_host_list_item=-1,this.hosts=[{host:"192.168.12.21",health:"up",group:void 0,type:"s",tags:[],last_health_check:new Date},{host:"192.168.12.21",health:"down",group:void 0,type:"s",tags:[],last_health_check:new Date},{host:"192.168.12.21",health:"down",group:void 0,type:"s",tags:[],last_health_check:new Date}]}ngOnInit(){this.aseetService.getHosts().subscribe(n=>{n.forEach(n=>{this.hosts.push(n)})})}};v.ctorParameters=()=>[{type:s.v},{type:Document,decorators:[{type:s.D,args:[i.d]}]},{type:l.a}],v.propDecorators={template:[{type:s.pb,args:["template",{static:!1}]}]},v=Object(a.a)([Object(s.n)({selector:"app-host-list",template:'<div fxFlex class="container">\n\n\n  <div class="scsroll" fxLayout="column">\n\n    <ng-container *ngFor="let host of hosts ; index as index">\n\n      <div fxLayout="column" (click)="detailedView(index)">\n\n        <div [class.selected]="selected_host_list_item == index " fxLayout="row" fxFlex>\n\n          <div appHoverColor fxFlex fxLayoutAlign="center center" fxLayoutGap="1rem" class="list-item">\n\n            <ng-container *ngIf="host?.health == \'up\' ; else healthDown">\n\n              <nb-icon class="health-up " icon="arrow-up">\n\n              </nb-icon>\n            </ng-container>\n            <ng-template #healthDown>\n              <nb-icon class="health-down " icon="arrow-down">\n\n              </nb-icon>\n            </ng-template>\n\n            <div appHoverColor fxFlex fxLayoutAlign="start center" class="list-item">\n\n\n              <span class="marL list-item-head">\n                {{host.host}}\n\n              </span>\n            </div>\n\n          </div>\n          <div appHoverColor fxFlex="150px" fxLayoutAlign="center center" class="list-item">\n            {{host.group || \'None\'}}\n\n          </div>\n\n\n\n          <div appHoverColor fxFlex="180px" fxLayoutAlign="center center" class="list-item">\n            {{host.dou | date}}\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n\n  </div>\n\n</div>\n\n\n\n<ng-template #template>\n\n  <app-host-add></app-host-add>\n\n\n</ng-template>\n',animations:[...c.a],styles:[".list-item-head {\n  font-weight: 600 !important;\n  font-size: 0.9rem;\n  color: #a4b1cd !important;\n  overflow: auto;\n}\n\n.list-item {\n  font-weight: 200;\n  font-size: 0.9rem;\n  color: #fff !important;\n  overflow: auto;\n}\n\n.list-head {\n  height: 4rem;\n}\n\n.scroll {\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 0;\n  overflow: auto;\n}\n\n.health-up {\n  color: #9fef00 !important;\n}\n\n.health-down {\n  color: #ff3e3e !important;\n}\n\n:host ::ng-deep ngx-drawer {\n  width: 599px;\n}\n\n.selected {\n  background: #3366ff !important;\n}"]})],v);var x=t("XiUz"),g=t("SDw7"),y=t("KPRU");let w=class{constructor(n,e,t,a){this.el=n,this.document=e,this.drawerService=t,this.aseetService=a}ngOnInit(){}addIp(n,e=g.a.Left,t=50,a=!0,s=!0,i){this.document.body.classList.add("cdk-global-scrollblock"),this.drawerService.create({direction:e,template:n,size:t,context:"Alert Everyone!",closeOnOutsideClick:a,parentContainer:i,isRoot:s,zIndex:1041,cssClass:"backdrop_color"}).onDestroy(()=>{this.document.body.classList.remove("cdk-global-scrollblock")})}};w.ctorParameters=()=>[{type:s.v},{type:Document,decorators:[{type:s.D,args:[i.d]}]},{type:y.a},{type:l.a}],w=Object(a.a)([Object(s.n)({selector:"app-host-search",template:'<div fxFlex class="container">\n\n\n  <div   fxLayout="row" fxFlex class="list-head" fxLayoutAlign="start center" fxLayoutGap="1rem">\n\n    <div fxFlex>\n      <nb-form-field >\n        <nb-icon icon="search-outline" nbPrefix status="basic" >\n\n        </nb-icon>\n        <input nbInput fullWidth placeholder="Search Host"   status="primary">\n\n      </nb-form-field>\n    </div>\n\n\n\n    <div  fxLayoutGap="1rem">\n      <button (click)="addIp(addIpTemplate)" fxFlex nbButton status="basic" outline>Add New</button>\n      <button (click)="addIp(addIpTemplate)" fxFlex nbButton status="success" outline>Import</button>\n    </div>\n  </div>\n</div>\n\n<ng-template #addIpTemplate>\n  <app-host-add></app-host-add>\n</ng-template>\n',styles:[".list-item-head {\n  font-weight: 600;\n  font-size: 0.8rem;\n  color: #a4b1cd !important;\n}"]})],w);var L=t("aceb"),k=t("rDax");let _=class{};_=Object(a.a)([Object(s.M)({declarations:[m,v,w,h],imports:[i.c,u,f.a,x.a,L.n,L.k,L.m,k.f,L.o,L.C,d.f,d.m,L.x,L.k,L.p]})],_)}}]);