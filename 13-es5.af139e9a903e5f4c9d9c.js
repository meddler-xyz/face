!function(){function n(n){return function(n){if(Array.isArray(n))return t(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||function(n,e){if(!n)return;if("string"==typeof n)return t(n,e);var i=Object.prototype.toString.call(n).slice(8,-1);"Object"===i&&n.constructor&&(i=n.constructor.name);if("Map"===i||"Set"===i)return Array.from(n);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return t(n,e)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,i=new Array(t);e<t;e++)i[e]=n[e];return i}function e(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function i(n,t){for(var e=0;e<t.length;e++){var i=t[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}function a(n,t,e){return t&&i(n.prototype,t),e&&i(n,e),n}(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{yKjN:function(t,i,o){"use strict";o.r(i),o.d(i,"HostModule",function(){return F});var r=o("mrSG"),s=o("fXoL"),c=o("ofXK"),l=o("tyNb"),d=o("c0TW"),p=o("3Pt+"),u=o("y8eJ"),h=o("ZfaG"),f=[p.n.pattern("(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"),p.n.required],m=function(){function n(t){e(this,n),this.assetApiService=t,this.saving=!1,this.saving_ip_index=-1,this.ip_addresses=new p.b([new p.d("",f)]),this.tmp$=1}return a(n,[{key:"addNewIp",value:function(){this.ip_addresses.push(new p.d("",f))}},{key:"ngOnInit",value:function(){}},{key:"removeAt",value:function(n){this.ip_addresses.removeAt(n)}},{key:"saveIp",value:function(){var n=this;this.saving=!0,this.ip_addresses.controls.forEach(function(t,e){t.valid&&n.assetApiService.addHost(t.value).subscribe(function(t){n.ip_addresses.removeAt(e)})}),this.saving=!1}}]),n}();m.ctorParameters=function(){return[{type:u.a}]},m=Object(r.a)([Object(s.n)({selector:"app-host-add",template:'<nb-card size="medium">\n\n\n\n  <nb-card-header>\n\n    <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n      <nb-icon class="text-hint" icon="plus-circle">\n      </nb-icon>\n      <div fxFlex class="h6 text-hint">\n        Add Host\n\n      </div>\n\n\n      <button status="warning" (click)="addNewIp()" nbButton outline size="small">\n        Add New\n\n        <nb-icon icon="plus-circle">\n        </nb-icon>\n\n      </button>\n\n\n\n\n\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n\n\n\n    <div class="item"   @init *ngFor="let ip_address_import of ip_addresses.controls; index as index ">\n\n\n      <nb-form-field [nbSpinner]="saving">\n        <div nbPrefix icon="at-outline" pack="eva">\n          #{{index+1}}\n        </div>\n        <input fullWidth [formControl]="ip_addresses.controls[index]" nbInput fieldSize="medium"\n          [status]="ip_addresses.controls[index].valid ? \'basic\' : \'danger\' " placeholder="IP Address">\n\n\n        <button [ngStyle]="{ \'visibility\': index == 0 ? \'hidden\' : \'visible\'  }" nbSuffix (click)="removeAt(index)"\n          nbButton size="small" ghost status="basic">\n          <nb-icon icon="trash-outline">\n          </nb-icon>\n        </button>\n\n\n      </nb-form-field>\n\n\n\n      <ng-container>\n        <div [ngStyle]="{ \'visibility\': ip_addresses.controls[index].valid ? \'hidden\' : \'visible\'  }"\n          class="error-message">\n          <span class="caption">\n            *Invalid IP Address\n          </span>\n        </div>\n\n      </ng-container>\n\n    </div>\n\n\n\n\n\n  </nb-card-body>\n\n  <nb-card-footer fxLayoutAlign="end center">\n\n\n\n    <button [disabled]="!ip_addresses.valid" (click)="saveIp()" outline nbButton\n      [status]="ip_addresses.valid ? \'success\': \'basic\'">\n\n      <nb-icon icon="checkmark-circle-2">\n      </nb-icon>\n      Save\n\n\n    </button>\n  </nb-card-footer>\n\n</nb-card>\n',animations:n(h.a),styles:[".marL {\n  margin-left: 10px;\n}\n\n.item {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.error-message {\n  margin-top: 0.6rem;\n  margin-bottom: 0.6rem;\n}"]})],m);var b=function(){function n(){e(this,n)}return a(n,[{key:"ngOnInit",value:function(){}}]),n}();b.ctorParameters=function(){return[]},b=Object(r.a)([Object(s.n)({selector:"app-host-management",template:' <nb-card fxFill>\n\n\n   <nb-card-header>\n\n     <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n       <nb-icon class="text-hint" icon="plus-circle">\n       </nb-icon>\n       <div fxFlex class="h6 text-hint">\n         List of Hosts\n\n       </div>\n     </div>\n\n   </nb-card-header>\n\n   <nb-card-header>\n     <app-host-search></app-host-search>\n\n   </nb-card-header>\n\n   <nb-card-header class="nogap">\n\n     <div fxLayout="column">\n\n       <div fxLayout="row" fxFlex class="list-head">\n\n\n\n\n         <div appHoverColor appBorder fxFlex fxLayoutAlign="start center" class="list-item-head">\n           <span class="marL" style=" padding-left:\'2rem\'">\n             Host\n\n           </span>\n         </div>\n\n\n         <div appHoverColor appBorder fxFlex="150px" fxLayoutAlign="center center" class="list-item-head">\n           Group\n         </div>\n\n\n         <div appHoverColor appBorder fxFlex="180px" fxLayoutAlign="center center" class="list-item-head">\n           Last Checked\n         </div>\n\n\n       </div>\n\n     </div>\n\n   </nb-card-header>\n\n\n\n   <nb-card-body class="nogap">\n     <app-host-list></app-host-list>\n   </nb-card-body>\n\n </nb-card>\n',styles:[":host nb-tab {\n  padding: 0rem;\n}\n\n.stycky {\n  position: -webkit-sticky;\n  /* Safari */\n  position: sticky;\n}\n\n.list-item-head {\n  font-weight: 600 !important;\n  font-size: 0.9rem;\n  color: #a4b1cd !important;\n  overflow: auto;\n}\n\n.list-head {\n  height: 4rem;\n}\n\n.nogap {\n  padding: 0rem !important;\n}\n\nnb-list {\n  height: 0px !important;\n  overflow: scroll;\n}"]})],b);var v=[{path:"add",component:m,data:{id:d.b.HostCreate}},{path:"**",component:b,data:{id:d.b.HostConfigure}}],x=function n(){e(this,n)};x=Object(r.a)([Object(s.M)({imports:[l.j.forChild(v)],exports:[l.j]})],x);var g=o("IwCi"),y=function(){function n(t,i,a){e(this,n),this.el=t,this.document=i,this.aseetService=a,this.selected_host_list_item=-1,this.hosts=[{host:"192.168.12.21",health:"up",group:void 0,type:"s",tags:[],last_health_check:new Date},{host:"192.168.12.21",health:"down",group:void 0,type:"s",tags:[],last_health_check:new Date},{host:"192.168.12.21",health:"down",group:void 0,type:"s",tags:[],last_health_check:new Date}]}return a(n,[{key:"ngOnInit",value:function(){var n=this;this.aseetService.getHosts().subscribe(function(t){t.forEach(function(t){n.hosts.push(t)})})}}]),n}();y.ctorParameters=function(){return[{type:s.v},{type:Document,decorators:[{type:s.D,args:[c.d]}]},{type:u.a}]},y.propDecorators={template:[{type:s.pb,args:["template",{static:!1}]}]},y=Object(r.a)([Object(s.n)({selector:"app-host-list",template:'<div fxFlex class="container">\n\n\n  <div class="scsroll" fxLayout="column">\n\n    <ng-container *ngFor="let host of hosts ; index as index">\n\n      <div fxLayout="column" (click)="detailedView(index)">\n\n        <div [class.selected]="selected_host_list_item == index " fxLayout="row" fxFlex>\n\n          <div appHoverColor fxFlex fxLayoutAlign="center center" fxLayoutGap="1rem" class="list-item">\n\n            <ng-container *ngIf="host?.health == \'up\' ; else healthDown">\n\n              <nb-icon class="health-up " icon="arrow-up">\n\n              </nb-icon>\n            </ng-container>\n            <ng-template #healthDown>\n              <nb-icon class="health-down " icon="arrow-down">\n\n              </nb-icon>\n            </ng-template>\n\n            <div appHoverColor fxFlex fxLayoutAlign="start center" class="list-item">\n\n\n              <span class="marL list-item-head">\n                {{host.host}}\n\n              </span>\n            </div>\n\n          </div>\n          <div appHoverColor fxFlex="150px" fxLayoutAlign="center center" class="list-item">\n            {{host.group || \'None\'}}\n\n          </div>\n\n\n\n          <div appHoverColor fxFlex="180px" fxLayoutAlign="center center" class="list-item">\n            {{host.dou | date}}\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n\n  </div>\n\n</div>\n\n\n\n<ng-template #template>\n\n  <app-host-add></app-host-add>\n\n\n</ng-template>\n',animations:n(h.a),styles:[".list-item-head {\n  font-weight: 600 !important;\n  font-size: 0.9rem;\n  color: #a4b1cd !important;\n  overflow: auto;\n}\n\n.list-item {\n  font-weight: 200;\n  font-size: 0.9rem;\n  color: #fff !important;\n  overflow: auto;\n}\n\n.list-head {\n  height: 4rem;\n}\n\n.scroll {\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 0;\n  overflow: auto;\n}\n\n.health-up {\n  color: #9fef00 !important;\n}\n\n.health-down {\n  color: #ff3e3e !important;\n}\n\n:host ::ng-deep ngx-drawer {\n  width: 599px;\n}\n\n.selected {\n  background: #3366ff !important;\n}"]})],y);var w=o("XiUz"),k=o("SDw7"),L=o("KPRU"),A=function(){function n(t,i,a,o){e(this,n),this.el=t,this.document=i,this.drawerService=a,this.aseetService=o}return a(n,[{key:"ngOnInit",value:function(){}},{key:"addIp",value:function(n){var t=this,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k.a.Left,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=arguments.length>5?arguments[5]:void 0;this.document.body.classList.add("cdk-global-scrollblock"),this.drawerService.create({direction:e,template:n,size:i,context:"Alert Everyone!",closeOnOutsideClick:a,parentContainer:r,isRoot:o,zIndex:1041,cssClass:"backdrop_color"}).onDestroy(function(){t.document.body.classList.remove("cdk-global-scrollblock")})}}]),n}();A.ctorParameters=function(){return[{type:s.v},{type:Document,decorators:[{type:s.D,args:[c.d]}]},{type:L.a},{type:u.a}]},A=Object(r.a)([Object(s.n)({selector:"app-host-search",template:'<div fxFlex class="container">\n\n\n  <div   fxLayout="row" fxFlex class="list-head" fxLayoutAlign="start center" fxLayoutGap="1rem">\n\n    <div fxFlex>\n      <nb-form-field >\n        <nb-icon icon="search-outline" nbPrefix status="basic" >\n\n        </nb-icon>\n        <input nbInput fullWidth placeholder="Search Host"   status="primary">\n\n      </nb-form-field>\n    </div>\n\n\n\n    <div  fxLayoutGap="1rem">\n      <button (click)="addIp(addIpTemplate)" fxFlex nbButton status="basic" outline>Add New</button>\n      <button (click)="addIp(addIpTemplate)" fxFlex nbButton status="success" outline>Import</button>\n    </div>\n  </div>\n</div>\n\n<ng-template #addIpTemplate>\n  <app-host-add></app-host-add>\n</ng-template>\n',styles:[".list-item-head {\n  font-weight: 600;\n  font-size: 0.8rem;\n  color: #a4b1cd !important;\n}"]})],A);var _=o("aceb"),I=o("rDax"),F=function n(){e(this,n)};F=Object(r.a)([Object(s.M)({declarations:[b,y,A,m],imports:[c.c,x,g.a,w.a,_.n,_.k,_.m,I.f,_.o,_.C,p.f,p.m,_.x,_.k,_.p]})],F)}}])}();