!function(){function n(n){return function(n){if(Array.isArray(n))return e(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||function(n,t){if(!n)return;if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);"Object"===r&&n.constructor&&(r=n.constructor.name);if("Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return e(n,t)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function t(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function r(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function a(n,e,t){return e&&r(n.prototype,e),t&&r(n,t),n}(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{ssy1:function(e,r,o){"use strict";o.r(r),o.d(r,"DockerModule",function(){return O});var i=o("mrSG"),s=o("fXoL"),c=o("ofXK"),d=o("tyNb"),l=o("c0TW"),u=o("3Pt+"),f=o("y8eJ"),b=o("ZfaG"),p=[u.n.pattern(/(?:git|ssh|https?|git@[-\w.]+):(\/\/)?(.*?)(\.git)(\/?|\#[-\d\w._]+?)$/),u.n.required],m=function(){function n(e){t(this,n),this.assetApiService=e,this.saving=!1,this.saving_ip_index=-1,this.auth$=new u.e({username:new u.d("admin",[u.n.required]),password:new u.d("password",[u.n.required])}),this.access_token$=new u.e({access_token:new u.d("access_token",[u.n.required])}),this.ssh$=new u.e({ssh:new u.d("ssh",[u.n.required])}),this.ip_addresses=new u.b([new u.d("",p)]),this.tmp$=1,this.myForm=new u.e({name:new u.d("",[u.n.required]),url:new u.d("http://localhost/asset/repository/add.git",p),credential_type:new u.d("none"),credentials:new u.e({})})}return a(n,[{key:"addNewIp",value:function(){this.ip_addresses.push(new u.d(""))}},{key:"ngOnInit",value:function(){var n=this;this.myForm.get("credential_type").valueChanges.subscribe(function(e){switch(console.log("d",e),e){case"none":n.myForm.setControl("credentials",null);break;case"password":n.myForm.setControl("credentials",n.auth$);break;case"access_token":n.myForm.setControl("credentials",n.access_token$);break;case"ssh":n.myForm.setControl("credentials",n.ssh$)}})}},{key:"removeAt",value:function(n){this.ip_addresses.removeAt(n)}},{key:"save",value:function(){this.saving=!0,this.assetApiService.addDocker(this.myForm.value).subscribe()}}]),n}();m.ctorParameters=function(){return[{type:f.a}]},m=Object(i.a)([Object(s.n)({selector:"app-docker-add",template:'<form [formGroup]="myForm" novalidate >\n\n  <nb-card @init>\n\n    <nb-card-header>\n\n      <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n        <nb-icon class="text-hint" icon="plus-circle">\n        </nb-icon>\n        <div fxFlex class="h6 text-hint">\n          Add Docker\n\n        </div>\n\n      </div>\n\n    </nb-card-header>\n\n    <nb-card-body @init>\n      <nb-form-field [nbSpinner]="saving" >\n \n        <input formControlName="name" fullWidth fxFlex="50%"  nbInput fieldSize="large"   [status]="name?.valid ? \'primary\' : \'basic\' "\n            placeholder="Name">\n\n  \n\n      </nb-form-field>\n\n    </nb-card-body>\n\n    <nb-card-body @init>\n      <nb-form-field [nbSpinner]="saving">\n        <div nbPrefix icon="at-outline" pack="eva">\n          Url\n\n        </div>\n        <input formControlName="url" nbInput fieldSize="medium" fxFlex [status]="url?.valid ? \'primary\' : \'basic\' "\n          fullWidth placeholder="Repository Url">\n\n        <button nbButton nbSuffix size="small" filled status="primary">\n          <nb-icon icon="close-outline">\n          </nb-icon>\n        </button>\n\n      </nb-form-field>\n\n    </nb-card-body>\n \n    <nb-card-body @init   >\n  <div  >\n\n\n      <div     fxLayout="row" class="credentials h6 text-hint  ">\n        Credentials\n      </div>\n\n      <div  appBorder class="credentials"   fxLayout="row">\n\n        <nb-radio-group formControlName="credential_type" fxLayout="row" name="status" status="basic">\n          <nb-radio [checked]="true" value="none">\n            None\n          </nb-radio>\n\n          <nb-radio value="password">\n            Password\n          </nb-radio>\n\n          <nb-radio value="access_token">\n            Access token\n          </nb-radio>\n\n          <nb-radio value="ssh">\n            SSH\n          </nb-radio>\n        </nb-radio-group>\n\n      </div>\n\n\n    <div   class="credentials  "  formGroupName="credentials"\n\n     @init fxLayout="column" fxLayoutGap="1rem">\n\n\n      <ng-container  \n      \n      [ngSwitch]="myForm.get(\'credential_type\').value">\n\n\n        <ng-container *ngSwitchCase="\'none\'">\n\n        </ng-container>\n\n\n        <ng-container *ngSwitchCase="\'password\'">\n          <nb-form-field>\n\n            <input\n            formControlName="username"\n            nbInput fieldSize="medium" status="primary" placeholder="Username">\n\n            <button nbButton nbSuffix size="small" filled status="primary">\n              <nb-icon icon="close-outline">\n              </nb-icon>\n            </button>\n\n          </nb-form-field>\n\n\n          <nb-form-field>\n\n            <input\n            formControlName="password"\n            nbInput fieldSize="medium" status="primary" placeholder="Password">\n\n            <button nbButton nbSuffix size="small" filled status="primary">\n              <nb-icon icon="close-outline">\n              </nb-icon>\n            </button>\n\n          </nb-form-field>\n        </ng-container>\n\n\n\n\n        <ng-container *ngSwitchCase="\'access_token\'">\n\n\n\n          <textarea\n          formControlName="access_token"\n          \n          rows="7" status="primary" nbInput fullWidth placeholder="Access Token"></textarea>\n\n\n        </ng-container>\n\n\n        <ng-container *ngSwitchCase="\'ssh\'">\n          <textarea\n          formControlName="ssh"\n          \n          rows="7" status="primary" nbInput fullWidth placeholder="SSH Key"></textarea>\n        </ng-container>\n      </ng-container>\n\n\n    </div>\n\n\n\n\n\n\n    </div>\n\n\n\n\n    </nb-card-body>\n\n\n\n\n\n\n\n\n\n    <nb-card-footer fxLayoutAlign="end center">\n\n\n\n\n      <button [disabled]="!myForm?.valid" (click)="save()" outline nbButton [status]="myForm?.valid ? \'success\': \'basic\'">\n\n        <nb-icon icon="checkmark-circle-2">\n        </nb-icon>\n        Save\n\n      </button>\n    </nb-card-footer>\n\n\n  </nb-card>\n</form>\n',animations:n(b.a),styles:[""]})],m);var h=function(){function n(){t(this,n)}return a(n,[{key:"ngOnInit",value:function(){}}]),n}();h.ctorParameters=function(){return[]},h=Object(i.a)([Object(s.n)({selector:"app-docker-home",template:"<app-docker-search></app-docker-search>\n<app-docker-list></app-docker-list>\n<app-docker-add></app-docker-add>\n\x3c!-- dsad --\x3e",styles:[""]})],h);var y=[{path:"",children:[{path:"add",component:m,data:{id:l.b.DockerCreate}},{path:"**",component:h,data:{id:l.b.DockerConfigure}}]}],v=function n(){t(this,n)};v=Object(i.a)([Object(s.M)({imports:[d.j.forChild(y)],exports:[d.j]})],v);var w=o("rDax"),k=o("XiUz"),g=o("aceb"),x=o("IwCi"),S=function(){function n(){t(this,n)}return a(n,[{key:"ngOnInit",value:function(){}}]),n}();S.ctorParameters=function(){return[]},S=Object(i.a)([Object(s.n)({selector:"app-docker-search",template:"<p>docker-search works!</p>\n",styles:[""]})],S);var C=function(){function n(){t(this,n)}return a(n,[{key:"ngOnInit",value:function(){}}]),n}();C.ctorParameters=function(){return[]},C=Object(i.a)([Object(s.n)({selector:"app-docker-list",template:"<p>docker-list works!</p>\n",styles:[""]})],C);var O=function n(){t(this,n)};O=Object(i.a)([Object(s.M)({declarations:[h,S,m,C],imports:[c.c,v,x.a,k.a,g.n,g.k,g.m,w.f,g.o,g.C,u.f,u.m,g.x,g.k,g.v,g.u]})],O)}}])}();