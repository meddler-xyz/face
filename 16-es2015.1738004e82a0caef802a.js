(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{eghr:function(n,e,t){"use strict";t.r(e),t.d(e,"WebModule",function(){return y});var a=t("mrSG"),i=t("fXoL"),s=t("ofXK"),o=t("tyNb"),r=t("c0TW"),d=t("3Pt+"),l=t("y8eJ"),c=t("ZfaG");let p=class{constructor(n){this.assetApiService=n,this.saving=!1,this.saving_ip_index=-1,this.ip_addresses=new d.b([new d.d("")]),this.tmp$=1}addNewIp(){this.ip_addresses.push(new d.d(""))}ngOnInit(){}removeAt(n){this.ip_addresses.removeAt(n)}saveIp(){this.saving=!0,this.ip_addresses.controls.forEach(n=>{n.valid&&this.assetApiService.addWeb(n.value).subscribe()})}};p.ctorParameters=()=>[{type:l.a}],p=Object(a.a)([Object(i.n)({selector:"app-web-add",template:' <nb-card @init size="large">\n\n\n   <nb-card-header>\n\n     <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n       <nb-icon class="text-hint" icon="plus-circle">\n       </nb-icon>\n       <div fxFlex class="h6 text-hint">\n         Add Website\n\n       </div>\n       \x3c!-- <div fxFlex fxLayoutAlign="end center">\n    \n          <nb-toggle [checked]="true" labelPosition="left" status="primary">IPv4</nb-toggle>\n        </div> --\x3e\n\n\n\n       <button status="warning" (click)="addNewIp()" nbButton outline size="small">\n         Add New\n\n         <nb-icon icon="plus-circle">\n         </nb-icon>\n\n       </button>\n\n\n\n\n\n     </div>\n   </nb-card-header>\n\n\n   <nb-card-body fxFlex="0 0">\n\n\n\n\n     <div fxLayoutGap="1rem" fxLayout="column" class="list-item" @slideInOut\n       *ngFor="let ip_address_import of ip_addresses.controls; index as index ">\n\n\n       <nb-form-field fxFlex [nbSpinner]="saving">\n         <div nbPrefix icon="at-outline" pack="eva">\n           #{{index+1}}\n         </div>\n         <input [formControl]="ip_addresses.controls[index]" nbInput fullWidth fieldSize="medium"\n           [status]="ip_addresses.controls[index].valid ? \'basic\' : \'danger\' " placeholder="Add URL">\n\n\n         <button [ngStyle]="{ \'visibility\': index == 0 ? \'hidden\' : \'visible\'  }" nbSuffix (click)="removeAt(index)"\n           nbButton size="small" ghost status="basic">\n           <nb-icon icon="trash-outline">\n           </nb-icon>\n         </button>\n\n\n       </nb-form-field>\n\n\n\n\n\n\n       <ng-container>\n         <div [ngStyle]="{ \'visibility\': ip_addresses.controls[index].valid ? \'hidden\' : \'visible\'  }"\n           class="error-message" fxLayoutGap="1rem" fxLayoutAlign="start center">\n           <span class="caption">\n             *Invalid URL\n\n           </span>\n         </div>\n\n       </ng-container>\n\n     </div>\n\n   </nb-card-body>\n   <nb-card-footer fxLayoutAlign="end center">\n\n\n\n     <button [disabled]="!ip_addresses.valid" (click)="saveIp()" outline nbButton\n       [status]="ip_addresses.valid ? \'success\': \'basic\'">\n\n       <nb-icon icon="checkmark-circle-2">\n       </nb-icon>\n       Save\n\n\n     </button>\n   </nb-card-footer>\n\n\n </nb-card>\n',animations:[...c.a],styles:[".marL {\n  margin-left: 10px;\n}"]})],p);let b=class{constructor(){}ngOnInit(){}};b.ctorParameters=()=>[],b=Object(a.a)([Object(i.n)({selector:"app-web-home",template:' <nb-card size="giant">\n\n\n\n   <nb-card-header>\n\n     <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n       <nb-icon class="text-hint" icon="plus-circle">\n       </nb-icon>\n       <div fxFlex class="h6 text-hint">\n         List of Websites\n\n       </div>\n     </div>\n\n   </nb-card-header>\n\n   <nb-card-header class="nogap">\n\n\n    <app-web-search></app-web-search>\n\n   </nb-card-header>\n   <nb-card-header class="nogap">\n\n     <div fxLayout="column">\n\n       <div fxLayout="row" fxFlex class="list-head">\n\n\n\n\n         <div appHoverColor appBorder fxFlex fxLayoutAlign="start center" class="list-item-head">\n           <span class="marL" style=" padding-left:\'2rem\'">\n             URL\n\n           </span>\n         </div>\n\n\n         <div appHoverColor appBorder fxFlex="150px" fxLayoutAlign="center center" class="list-item-head">\n           Group\n         </div>\n\n\n         <div appHoverColor appBorder fxFlex="180px" fxLayoutAlign="center center" class="list-item-head">\n           Last Checked\n         </div>\n\n\n       </div>\n\n     </div>\n   </nb-card-header>\n\n   <nb-card-body class="nogap">\n     <app-web-list>\n     </app-web-list>\n   </nb-card-body>\n\n </nb-card>\n',styles:[".list-item-head {\n  font-weight: 600;\n  font-size: 0.8rem;\n  color: #a4b1cd !important;\n}\n\n.list-head {\n  height: 4rem;\n}\n\n.container {\n  margin-top: 1rem;\n}\n\n:host nb-tab {\n  padding: 0rem;\n}\n\n.nogap {\n  padding: 0rem !important;\n}"]})],b);const f=[{path:"add",component:p,data:{id:r.b.WebCreate}},{path:"**",component:b,data:{id:r.b.WebConfigure}}];let m=class{};m=Object(a.a)([Object(i.M)({imports:[o.j.forChild(f)],exports:[o.j]})],m);let u=class{constructor(n,e,t){this.el=n,this.document=e,this.assetApiService=t,this.selected_host_list_item=-1,this.web_apps=[]}ngOnInit(){this.assetApiService.getWeb().subscribe(n=>{this.web_apps=n})}};u.ctorParameters=()=>[{type:i.v},{type:Document,decorators:[{type:i.D,args:[s.d]}]},{type:l.a}],u.propDecorators={template:[{type:i.pb,args:["template",{static:!1}]}]},u=Object(a.a)([Object(i.n)({selector:"app-web-list",template:'<div fxFlex class="container">\n\n \n  <div class="scsroll" fxLayout="column">\n\n    <ng-container *ngFor="let web_app of web_apps ; index as index">\n\n      <div fxLayout="column" (click)="detailedView(index)">\n\n        <div       [class.selected]="selected_web_app_list_item == index " fxLayout="row" fxFlex>\n\n          <div appHoverColor appBorder fxFlex fxLayoutAlign="center center" fxLayoutGap="1rem" class="list-item">\n\n            <ng-container *ngIf="web_app?.health == \'up\' ; else healthDown">\n\n              <nb-icon class="health-up " icon="arrow-up">\n\n              </nb-icon>\n            </ng-container>\n            <ng-template #healthDown>\n              <nb-icon class="health-down " icon="arrow-down">\n\n              </nb-icon>\n            </ng-template>\n\n            <div appHoverColor fxFlex fxLayoutAlign="start center" class="list-item">\n\n\n              <span class="marL list-item-head">\n                {{web_app.value}}\n\n              </span>\n            </div>\n\n          </div>\n          <div appHoverColor appBorder fxFlex="150px" fxLayoutAlign="center center" class="list-item">\n            {{web_app.group || \'None\'}}\n\n          </div>\n\n\n\n          <div appHoverColor appBorder fxFlex="180px" fxLayoutAlign="center center" class="list-item">\n            {{web_app.dou | date}}\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n\n  </div>\n\n</div>\n\n\n\n<ng-template #template>\n\n  <app-web_app-add></app-web_app-add>\n\n\n</ng-template>\n',styles:[".list-item-head {\n  font-weight: 600 !important;\n  font-size: 0.9rem;\n  color: #a4b1cd !important;\n  overflow: auto;\n}\n\n.list-item {\n  font-weight: 200;\n  font-size: 0.9rem;\n  color: #fff !important;\n  margin-left: 0.8rem;\n  overflow: auto;\n}\n\n.list-head {\n  height: 4rem;\n}\n\n.scroll {\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 0;\n  overflow: auto;\n}\n\n.health-up {\n  color: #9fef00 !important;\n}\n\n.health-down {\n  color: #ff3e3e !important;\n}\n\n:host ::ng-deep ngx-drawer {\n  width: 599px;\n}\n\n.selected {\n  background: #3366ff !important;\n}"]})],u);let x=class{constructor(n,e,t){this.el=n,this.document=e,this.aseetService=t}ngOnInit(){}};x.ctorParameters=()=>[{type:i.v},{type:Document,decorators:[{type:i.D,args:[s.d]}]},{type:l.a}],x=Object(a.a)([Object(i.n)({selector:"app-web-search",template:'<div fxFlex class="container">\n\n\n  <div appBorder fxLayout="row" fxFlex class="list-head" fxLayoutAlign="start center" fxLayoutGap="1rem">\n\n\n\n\n    <div fxFlex="50%">\n      <nb-form-field>\n        <nb-icon icon="search-outline" nbPrefix status="basic">\n\n        </nb-icon>\n        <input nbInput fullWidth placeholder="Search Web" status="primary">\n\n      </nb-form-field>\n    </div>\n\n\n\n    <div fxFlex="50%" fxLayoutGap="1rem">\n      <button (click)="addDomain(domainAddTemplate)" fieldSize="small" fxFlex nbButton status="primary" outline>Add\n        New</button>\n      <button (click)="addDomain(domainAddTemplate)" fxFlex nbButton status="success" outline>Import</button>\n    </div>\n  </div>\n</div>\n\n<ng-template #domainAddTemplate>\n\n  <app-web-add></app-web-add>\n</ng-template>\n',styles:[""]})],x);var h=t("IwCi"),v=t("rDax"),g=t("XiUz"),w=t("aceb");let y=class{};y=Object(a.a)([Object(i.M)({declarations:[b,u,x,p],imports:[s.c,m,h.a,g.a,w.n,w.k,w.m,v.f,w.o,w.C,d.f,d.m,w.x,w.t]})],y)}}]);